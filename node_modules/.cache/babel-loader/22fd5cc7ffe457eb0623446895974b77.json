{"ast":null,"code":"const BASE_URL = \"http://localhost:3001\"; // process.env.API_URL;\n\nconst buildUrl = url => {\n  return `${BASE_URL}${url}`;\n};\n\nconst buildHeaders = () => {\n  const headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n  return new Headers(headers);\n};\n\nasync function appFetch(url, method = \"GET\", data = null) {\n  try {\n    const headers = buildHeaders();\n    const finalUrl = buildUrl(url);\n    const response = await fetch(finalUrl, {\n      method: method,\n      headers,\n      body: method !== \"GET\" ? JSON.stringify(data) : null\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return await response.json();\n  } catch (err) {\n    throw new Error(\"Oops, an error happened.\");\n  }\n}\n\nexport default appFetch;","map":{"version":3,"sources":["/Users/adityapanwar/Desktop/Test/Outvio Test/qa-test/src/appFetch.js"],"names":["BASE_URL","buildUrl","url","buildHeaders","headers","Accept","Headers","appFetch","method","data","finalUrl","response","fetch","body","JSON","stringify","ok","Error","statusText","json","err"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAjB,C,CAA0C;;AAE1C,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACxB,SAAQ,GAAEF,QAAS,GAAEE,GAAI,EAAzB;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,kBADM;AAEd,oBAAgB;AAFF,GAAhB;AAKA,SAAO,IAAIC,OAAJ,CAAYF,OAAZ,CAAP;AACD,CAPD;;AASA,eAAeG,QAAf,CAAwBL,GAAxB,EAA6BM,MAAM,GAAG,KAAtC,EAA6CC,IAAI,GAAG,IAApD,EAA0D;AACxD,MAAI;AACF,UAAML,OAAO,GAAGD,YAAY,EAA5B;AAEA,UAAMO,QAAQ,GAAGT,QAAQ,CAACC,GAAD,CAAzB;AAEA,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,EAAW;AACrCF,MAAAA,MAAM,EAAEA,MAD6B;AAErCJ,MAAAA,OAFqC;AAGrCS,MAAAA,IAAI,EAAEL,MAAM,KAAK,KAAX,GAAmBM,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAnB,GAA0C;AAHX,KAAX,CAA5B;;AAMA,QAAI,CAACE,QAAQ,CAACK,EAAd,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAUN,QAAQ,CAACO,UAAnB,CAAN;AACD;;AAED,WAAO,MAAMP,QAAQ,CAACQ,IAAT,EAAb;AACD,GAhBD,CAgBE,OAAOC,GAAP,EAAY;AACZ,UAAM,IAAIH,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF;;AAED,eAAeV,QAAf","sourcesContent":["const BASE_URL = \"http://localhost:3001\"; // process.env.API_URL;\n\nconst buildUrl = (url) => {\n  return `${BASE_URL}${url}`;\n};\n\nconst buildHeaders = () => {\n  const headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  };\n\n  return new Headers(headers);\n};\n\nasync function appFetch(url, method = \"GET\", data = null) {\n  try {\n    const headers = buildHeaders();\n\n    const finalUrl = buildUrl(url);\n\n    const response = await fetch(finalUrl, {\n      method: method,\n      headers,\n      body: method !== \"GET\" ? JSON.stringify(data) : null,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return await response.json();\n  } catch (err) {\n    throw new Error(\"Oops, an error happened.\");\n  }\n}\n\nexport default appFetch;\n"]},"metadata":{},"sourceType":"module"}